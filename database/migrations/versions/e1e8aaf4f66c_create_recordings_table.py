"""Create recordings table

Revision ID: e1e8aaf4f66c
Revises: 
Create Date: 2025-08-18 09:24:01.465005

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'e1e8aaf4f66c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    recordingtaskstatus = postgresql.ENUM(
        'NEW', 'PENDING', 'FINISHED', 'FAILED',
        name='recordingtaskstatus',
        create_type=True
    )
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recordings',
       sa.Column('id', sa.Integer(), nullable=False),
                sa.Column('path', sa.String(), nullable=False),
                sa.Column('recognize_status', recordingtaskstatus, nullable=False),
                sa.Column('analysis_status', recordingtaskstatus, nullable=False),
                sa.Column('duration', sa.Float(), nullable=True),
                sa.Column('conversation', sa.JSON(), nullable=True),
                sa.Column('recognize_start', sa.DateTime(), nullable=True),
                sa.Column('recognize_end', sa.DateTime(), nullable=True),
                sa.Column('analysis_start', sa.DateTime(), nullable=True),
                sa.Column('analysis_end', sa.DateTime(), nullable=True),
                sa.Column('created', sa.DateTime(), nullable=False),
                sa.Column('updated', sa.DateTime(), nullable=False),
                sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recordings_analysis_status'), 'recordings', ['analysis_status'], unique=False)
    op.create_index(op.f('ix_recordings_recognize_status'), 'recordings', ['recognize_status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_recordings_recognize_status'), table_name='recordings')
    op.drop_index(op.f('ix_recordings_analysis_status'), table_name='recordings')
    op.drop_table('recordings')

    recordingtaskstatus = postgresql.ENUM(
        name='recordingtaskstatus',
        create_type=False
    )

    # Удаляем типы только если они существуют
    recordingtaskstatus.drop(bind=op.get_bind(), checkfirst=True)

    # ### end Alembic commands ###
